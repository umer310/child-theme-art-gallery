{"version":3,"file":"index.css","mappings":";;;AA0BA;;;EAAA;AAiBA;;EAAA;AAcA;;EAAA;AAkCA;;CAAA;AAgBA;EACE,cA3EM;AClBR;;ADgGA;EACE,4CA5Ca;EA6Cb,gBAjCa;EAkCb,wCAlEQ;AC3BV;;ADgGA;EACE;EACA;AC7FF;;ADgGA;EACE;EACA;AC7FF;;ADiGE;EACE;AC9FJ;ADgGE;EACE;AC9FJ;ADgGE;EACE;AC9FJ;;ACoCE;EACE;EACA;EACA;EACA;ADjCJ;ACmCI;EACE;EACA;EACA;ADjCN;ACoCI;EACE;EACA;EACA;ADlCN;ACqCI;EACE;EACA;EACA;ADnCN,C","sources":["webpack://twentytwentyfour-child/./src/sass/_settings.scss","webpack://twentytwentyfour-child/./src/sass-admin/index.scss","webpack://twentytwentyfour-child/./src/sass/_mixins.scss"],"sourcesContent":["// Grids\n\n// this should match with theme.json\n$grid-container: 1140; // 1126 =>  980\n$grid-container-wide: 1600; // 1360 => 1180\n//$grid-container-narrow: 900px; // nothing\n$grid-container-padding: 2.1785rem; // This mainly controls the spacing on sides for small screens\n\n//$grid-margin-gutters: (small: 23px, medium: 31px, large: 39px);\n//$grid-padding-gutters: (small: 46px, medium: 62px, large: 78px);\n//$grid-padding-gutters-reduce: (small: 46px, medium: 40px, large: 34px);\n\n$breakpoints: (\n  small: 0,\n  mobile: 480px,\n  wp-small: 600px,\n  medium: 782px,\n  large: 960px,\n  xlarge: 1080px,\n  xxlarge: 1140px,\n  huge: 1280px,\n  xhuge: 1440px,\n  xxhuge: 1920,\n  unlimited: 9999px,\n);\n\n/**\n * Colours for Theme\n * (Ideally, these should be css variables created with theme.json\n */\n\n// General Colors\n$white: #ffffff;\n$black: #222222;\n$light-black: #9d9d9d;\n$grey: #cccccc;\n$light-grey: #f8f8f8;\n$dark-grey: #555555;\n$medium-grey: #dedede;\n$secondary: var(--wp--preset--color--secondary);\n$input-border-clr: #a9a9a9;\n$light-black: #1d1c1c;\n\n/**\n * Theme.json Set Color Variables\n */\n$text-color: var(--wp--preset--color--text-color);\n\n$primary: var(--wp--preset--color--primary);\n$secondary: var(--wp--preset--color--secondary);\n$tertiary: var(--wp--preset--color--tertiary);\n\n// variable used in sass of various features\n$tertiary2: $grey;\n$tertiary3: $light-grey;\n$transparent: var(--wp--preset--color--transparent);\n\n/**\n * Theme.json Set Font Variables\n */\n$font-size-regular: 1rem;\n$font-size-xsmall: var(--wp--preset--font-size--extra-small); // 10px\n$font-size-small: var(--wp--preset--font-size--small); // 12px\n$font-size-regular: var(--wp--preset--font-size--regular); // 16px\n$font-size-large: var(--wp--preset--font-size--large); // 20px\n$font-size-xlarge: var(--wp--preset--font-size--xlarge); // 25px\n$font-size-medium: var(--wp--preset--font-size--medium); // 18px\n$font-size-h1: var(--wp--preset--font-size--h-1);\n$font-size-h2: var(--wp--preset--font-size--h-2);\n$font-size-h3: var(--wp--preset--font-size--h-3);\n$font-size-h4: var(--wp--preset--font-size--h-4);\n$font-size-h5: var(--wp--preset--font-size--h-5);\n$font-size-h6: var(--wp--preset--font-size--h-6);\n\n$block-gap: var(--wp--style--block-gap);\n\n// Fonts\n$font-colour: $text-color;\n$font-light: normal;\n$font-heavy: bold;\n$font-regular: 400;\n$font-semi: 600;\n$font-primary: var(--wp--preset--font-family--primary-font);\n$font-secondary: var(--wp--preset--font-family--secondary-font);\n$font-awesome-family: \"Font Awesome 6 Free\";\n\n// Transitions\n$transition-duration: 0.4s;\n$transition-style: ease;\n$transition: $transition-duration $transition-style;\n\n/**\n* Misc.\n*/\n$button-transition-duration: 0.3s;\n$button-transition-style: ease;\n$button-transition: $button-transition-duration $button-transition-style;\n\n$cubic-transition:\n  opacity 0.5s cubic-bezier(0.4, 0.9, 0.3, 1),\n  color 0.5s cubic-bezier(0.4, 0.9, 0.3, 1),\n  border-color 0.5s cubic-bezier(0.4, 0.9, 0.3, 1),\n  background-color 0.5s cubic-bezier(0.4, 0.9, 0.3, 1);\n$prod-icon-transition:\n  transform 0.3s ease-out,\n  -webkit-transform 0.3s ease-out;\n\n.editor-styles-wrapper {\n  color: $black;\n}\n\n.has-drop-cap:not(:focus)::first-letter {\n  font-size: $font-size-h2;\n  font-weight: $font-regular;\n  color: $primary;\n}\n\n.has-global-padding {\n  padding-right: var(--wp--preset--spacing--40);\n  padding-left: var(--wp--preset--spacing--40);\n}\n\n.has-global-padding > .alignfull {\n  margin-right: calc(var(--wp--preset--spacing--40) * -1);\n  margin-left: calc(var(--wp--preset--spacing--40) * -1);\n}\n\n.wp-block-group {\n  &.is-content-justification-center {\n    text-align: center;\n  }\n  &.is-content-justification-right {\n    text-align: right;\n  }\n  &.is-content-justification-left {\n    text-align: left;\n  }\n}\n","/**\n * Colours for Theme\n * (Ideally, these should be css variables created with theme.json\n */\n/**\n * Theme.json Set Color Variables\n */\n/**\n * Theme.json Set Font Variables\n */\n/**\n* Misc.\n*/\n.editor-styles-wrapper {\n  color: #222222;\n}\n\n.has-drop-cap:not(:focus)::first-letter {\n  font-size: var(--wp--preset--font-size--h-2);\n  font-weight: 400;\n  color: var(--wp--preset--color--primary);\n}\n\n.has-global-padding {\n  padding-right: var(--wp--preset--spacing--40);\n  padding-left: var(--wp--preset--spacing--40);\n}\n\n.has-global-padding > .alignfull {\n  margin-right: calc(var(--wp--preset--spacing--40) * -1);\n  margin-left: calc(var(--wp--preset--spacing--40) * -1);\n}\n\n.wp-block-group.is-content-justification-center {\n  text-align: center;\n}\n.wp-block-group.is-content-justification-right {\n  text-align: right;\n}\n.wp-block-group.is-content-justification-left {\n  text-align: left;\n}\n\n.acf-block-preview .alert-box {\n  padding: 1rem;\n  color: #31708f;\n  background-color: #d9edf7;\n  border-color: #bce8f1;\n}\n.acf-block-preview .alert-box-warning {\n  color: #8a6d3b;\n  background-color: #fcf8e3;\n  border-color: #faebcc;\n}\n.acf-block-preview .alert-box-error {\n  color: #a94442;\n  background-color: #f2dede;\n  border-color: #ebccd1;\n}\n.acf-block-preview .alert-box-success {\n  color: #3c763d;\n  background-color: #dff0d8;\n  border-color: #d6e9c6;\n}","$breakpoints: (\n  small: 0,\n  mobile: 480px,\n  wp-small: 600px,\n  medium: 782px,\n  large: 960px,\n  xlarge: 1080px,\n  xxlarge: 1140px,\n  huge: 1280px,\n  xhuge: 1440px,\n  xxhuge: 1920px,\n  unlimited: 9999px,\n);\n\n@mixin breakpoint($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    @media (min-width: map-get($breakpoints, $breakpoint)) {\n      @content;\n    }\n  } @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n          + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n  }\n}\n\n@mixin breakpoint-max($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    @media (max-width: calc(#{map-get($breakpoints, $breakpoint)} - 1px)) {\n      @content;\n    }\n  } @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n          + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n  }\n}\n\n@mixin breakpoint-min-max($min, $max: unlimited) {\n  @if map-has-key($breakpoints, $min) and map-has-key($breakpoints, $max) {\n    @media (min-width: map-get($breakpoints, $min)) and (max-width: calc(#{map-get($breakpoints, $max)} - 1px)) {\n      @content;\n    }\n  } @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$min}` or .`#{$max}` \"\n          + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n  }\n}\n\n$rem-base: 16px;\n\n@function strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@function convert-to-rem($value, $base-value: $rem-base) {\n  $value: calc(strip-unit($value) / strip-unit($base-value) * 1rem);\n  @if ($value == 0rem) {\n    $value: 0;\n  }\n  @return $value;\n}\n\n@function rem-calc($values, $base-value: $rem-base) {\n  $max: length($values);\n  @if $max == 1 {\n    @return convert-to-rem(nth($values, 1), $base-value);\n  }\n  $remValues: ();\n  @for $i from 1 through $max {\n    $remValues: append(\n      $remValues,\n      convert-to-rem(nth($values, $i), $base-value)\n    );\n  }\n  @return $remValues;\n}\n\n@mixin alertBoxStyling {\n  .alert-box {\n    padding: 1rem;\n    color: #31708f;\n    background-color: #d9edf7;\n    border-color: #bce8f1;\n\n    &-warning {\n      color: #8a6d3b;\n      background-color: #fcf8e3;\n      border-color: #faebcc;\n    }\n\n    &-error {\n      color: #a94442;\n      background-color: #f2dede;\n      border-color: #ebccd1;\n    }\n\n    &-success {\n      color: #3c763d;\n      background-color: #dff0d8;\n      border-color: #d6e9c6;\n    }\n  }\n}\n\n@mixin gravityFormButton {\n  .gform_button {\n    background-color: var(--wp--preset--color--primary) !important;\n    color: var(--wp--preset--color--secondary) !important;\n    display: flex !important;\n    align-items: center !important;\n    justify-content: center !important;\n    transition: 0.3s cubic-bezier(0.47, 0, 0.75, 0.72) !important;\n    padding: 15px 34px !important;\n    width: max-content !important;\n    font-size: 16px !important;\n    border-radius: 0 !important;\n    border: none !important;\n    cursor: pointer;\n\n    &:hover {\n      background-color: var(--wp--preset--color--text-color) !important;\n      color: var(--wp--preset--color--secondary) !important;\n    }\n  }\n}\n\n@mixin button {\n  height: 35px !important;\n  display: flex !important;\n  align-items: center;\n  justify-content: center;\n  transition: 0.3s;\n  font-size: 16px;\n  font-weight: 300;\n  border-radius: 0;\n  cursor: pointer;\n  font-family: \"Arial\", sans-serif;\n  line-height: 100% !important;\n}\n\n@mixin button-small {\n  @include button;\n  min-width: 168px !important;\n}\n"],"names":[],"sourceRoot":""}